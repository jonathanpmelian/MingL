services:
  web:
    build:
      context: ./apps/web
    ports:
      - "${WEB_PORT}:3000"
    environment:
      NODE_ENV: ${NODE_ENV}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_APP_ENV: ${NEXT_PUBLIC_APP_ENV}
      CYPRESS_BASE_URL: ${CYPRESS_BASE_URL}
    volumes:
      - ./apps/web/src:/app/src
    profiles:
      - dev
      - test

  api:
    build:
      context: ./apps/api
    ports:
      - "${API_PORT}:5000"
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      SALT_ROUNDS: ${SALT_ROUNDS}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      - db
    volumes:
      - ./apps/api/src:/app/src
    command: >
      sh -c "npx prisma generate && npx prisma migrate deploy && npm run dev"
    profiles:
      - dev

  api-test:
    build:
      context: ./apps/api
    ports:
      - "${API_PORT}:5100"
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      SALT_ROUNDS: ${SALT_ROUNDS}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      - testdb
    volumes:
      - ./apps/api/src:/app/src
    command: >
      sh -c "npx prisma generate && npx prisma migrate deploy && npm run dev"
    profiles:
      - test

  db:
    image: postgres
    environment:
      NODE_ENV: ${NODE_ENV}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    profiles:
      - dev

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    profiles:
      - dev

  testdb:
    image: postgres
    environment:
      NODE_ENV: ${NODE_ENV}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:5432"
    profiles:
      - test

volumes:
  db_data:
